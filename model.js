"use strict";class App{allCountries;foundResults;temp;foundCoords;foundBorders;API_URL="https://restcountries.com/v3.1/all";euMembers=["Austria","Belgium","Bulgaria","Croatia","Cyprus","Czechia","Denmark","Estonia","Finland","France","Germany","Greece","Hungary","Ireland","Italy","Latvia","Lithuania","Luxembourg","Malta","Netherlands","Poland","Portugal","Romania","Slovakia","Slovenia","Spain","Sweden"];async fetchAllCountries(e){try{const r=await fetch(this.API_URL);if(!r.ok)throw new Error("fetching errored");const t=await r.json();this.allCountries=t,e(!0)}catch(r){throw e(r.message),r}}getBordersNames(){const e=[];for(let r=0;r<this.foundBorders.length;r++){if(!this.foundBorders[r]){e.push([]);continue}const t=this.foundBorders[r].map((e=>this.allCountries.filter((r=>r.cca3===e)))).map((e=>e[0].name.common));e.push(t)}return e}async fetchWeather(e,r){try{const t=await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${e}&longitude=${r}&current_weather=true&hourly=temperature_2m,relativehumidity_2m,windspeed_10m`);if(!t.ok)throw new Error("errrrror");const a=await t.json();return a.current_weather.temperature}catch(e){throw console.error(e.message),e}}}