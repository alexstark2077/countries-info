"use strict";class Visuals{renderError(e){const s=`<div class="notification error">${e}</div>`;document.querySelector(".countries__form").insertAdjacentHTML("beforeend",s),setTimeout((()=>{document.querySelector(".notification")?.remove()}),5e3)}handleFormInput(e){formInput.addEventListener("input",(function(){if(formInput.value.length<3)return resultsNum.textContent="0",resultsBox.innerHTML="",void resultsBox.classList.remove("active");e()}))}getCapitalTime(e,s,i){let n;return"Russia"!==s&&"Belarus"!==s&&"Ukraine"!==s&&"Estonia"!==s&&"Latvia"!==s&&"Lithuania"!==s&&"Liechtenstein"!==s&&"Monaco"!==s&&"Finland"!==s&&"Sweden"!==s&&"Norway"!==s&&"Poland"!==s&&"Germany"!==s&&"France"!==s&&"Italy"!==s&&"Spain"!==s&&"Portugal"!==s&&"Greece"!==s&&"Austria"!==s&&"Switzerland"!==s&&"Serbia"!==s&&"Slovakia"!==s&&"Cyprus"!==s&&"Uganda"!==s&&"Czechia"!==s&&"Singapore"!==s&&"United Kingdom"!==s&&"Armenia"!==s&&"Slovenia"!==s&&"Denmark"!==s&&"Bosnia and Herzegovina"!==s&&"Montenegro"!==s&&"Denmark"!==s&&"Belgium"!==s&&"Luxembourg"!==s&&"Netherlands"!==s&&"Israel"!==s&&"Afghanistan"!==s&&"Indonesia"!==s&&"South Korea"!==s&&"Japan"!==s&&"Thailand"!==s&&"Hungary"!==s&&"Bulgaria"!==s&&"Saudi Arabia"!==s&&"Algeria"!==s&&"Croatia"!==s&&(e=i=""),"United States"===s&&(e="America",i="New_York"),"Turkey"===s&&(e="Europe",i="Istanbul"),"Kazakhstan"===s&&(e="Asia",i="Almaty"),"China"===s&&(e="Asia",i="Hong_Kong"),"Brazil"===s&&(e="America",i="Sao_Paulo"),"Canada"===s&&(e="America",i="Toronto"),"Mexico"===s&&(e="America",i="Mexico_City"),"Iceland"===s&&(e="Atlantic",i="Reykjavik"),"Cuba"===s&&(e="America",i="Havana"),"India"===s&&(e="Asia",i="Kolkata"),"South Africa"===s&&(e="Africa",i="Johannesburg"),"Argentina"===s&&(e="America",i="Argentina/Buenos_Aires"),"United Arab Emirates"===s&&(e="Asia",i="Dubai"),"Morocco"===s&&(e="Africa",i="Casablanca"),"Australia"===s&&(e="Australia",i="Canberra"),"Paraguay"===s&&(e="America",i="Asuncion"),"Egypt"===s&&(e="Africa",i="Cairo"),"Greenland"===s&&(e="America",i="Nuuk"),e&&i&&(n=(new Date).toLocaleString("en-US",{timeZone:`${e}/${i}`,hour:"numeric",minute:"numeric"})),n||"no info"}getCountryHTML(e){const[s,i,n,r]=e;return`<div class="countries__result">\n            <div class="countries__result-box">\n                <div class="countries__result-row countries__result-common-name">\n                    <div class="countries__result-key">Common name:</div>\n                    <div class="countries__result-value">${s.name.common}</div>\n                </div>\n                <div class="countries__result-row countries__result-official-name">\n                    <div class="countries__result-key">Official name:</div>\n                    <div class="countries__result-value">${s.name.official}</div>\n                </div>\n                <div class="countries__result-row countries__result-native-name">\n                    <div class="countries__result-key">Native name:</div>\n                    <div class="countries__result-value">${Object.values(s.name.nativeName)[0].official}</div>\n                </div>\n                <div class="countries__result-row countries__result-location">\n                    <div class="countries__result-key">Location:</div>\n                    <div class="countries__result-value">Milky Way, Solar System, Planet Terra, <span>${s.continents[0]}, ${s.subregion}</span></div>\n                </div>\n                <div class="countries__result-row countries__result-population">\n                    <div class="countries__result-key">Population:</div>\n                    <div class="countries__result-value">${new Intl.NumberFormat("en-US").format(s.population)}</div>\n                </div>\n                <div class="countries__result-row countries__result-langs">\n                    <div class="countries__result-key">Languages spoken:</div>\n                    <div class="countries__result-value">${Object.values(s.languages).join(", ")}</div>\n                </div>\n                <div class="countries__result-row countries__result-codes">\n                    <div class="countries__result-key">Country codes:</div>\n                    <div class="countries__result-value">${s.cca2}, ${s.cca3}, ${s.ccn3}</div>\n                </div>\n                <div class="countries__result-row countries__result-member">\n                    <div class="countries__result-key">EU/UN member:</div>\n                    <div class="countries__result-value">${Logic.euMembers.includes(s.name.common)?"yes":"no"}/${s.unMember?"yes":"no"}</div>\n                </div>\n            </div>\n            <div class="countries__result-box">\n                <div class="countries__result-flag">\n                    <img src="${s.flags.png}" alt="">\n                </div>\n                <div class="countries__result-row countries__result-currencies">\n                    <div class="countries__result-key">Currency:</div>\n                    <div class="countries__result-value">${Object.values(s.currencies)[0].name} (${Object.keys(s.currencies)[0]})</div>\n                </div>\n                <div class="countries__result-row countries__result-capital">\n                    <div class="countries__result-key">Capital:</div>\n                    <div class="countries__result-value">${s.capital?s.capital[0]:""}</div>\n                </div>\n                <div class="countries__result-row countries__result-capital-time">\n                    <div class="countries__result-key">Capital time:</div>\n                    <div class="countries__result-value">${this.getCapitalTime(i,n,r)}</div>\n                </div>\n                <div class="countries__result-row countries__result-capital-weather">\n                    <div class="countries__result-key">Capital temp:</div>\n                    <div class="countries__result-value">no info</div>\n                </div>\n                <div class="countries__result-row countries__result-borders">\n                    <div class="countries__result-key">Borders:</div>\n                    <div class="countries__result-value">no info</div>\n                </div>\n            </div>\n        </div>`}renderFoundCountries(e,s){s(),resultsBox.innerHTML="",e.forEach((e=>{e.borders;let s,i,n;s=e.continents[0],i=e.capital?.[0],n=e.name.common;const r=this.getCountryHTML([e,s,n,i]);resultsBox.insertAdjacentHTML("beforeend",r)}))}}